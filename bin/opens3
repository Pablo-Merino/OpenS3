#!/usr/bin/env ruby

require 'rubygems'
require 'rack'
require 'digest'
require 'opens3'
require 'trollop'

opts = Trollop::options do
  opt :dir,    "OpenS3 storage directory", :short => '-d', :type => :string
  opt :addr,   "OpenS3 server address",    :short => '-a', :type => :string
  opt :port,   "OpenS3 server port",       :short => '-p', :type => :int
  opt :server, "Rack server to use",       :short => '-s', :type => :string
  opt :config, "Config file",              :short => '-c', :type => :string
  opt :token,  "Set token string",         :short => '-t', :type => :string
end

if opts[:dir] and opts[:port] and !opts[:config]
  @port    = opts[:port]
  @dir     = opts[:dir]
  @address = opts[:addr]   || "0.0.0.0"  
  @token   = opts[:token]  || Digest::SHA512.hexdigest(OpenS3::random_string)
  @server  = opts[:server] || 'thin'

elsif !opts[:dir] and !opts[:port] and opts[:config]
  unless !File.exists?(opts[:config])
    cfg = YAML::load(File.open(opts[:config]))
    @address = cfg['address']
    @port    = cfg['port']
    @dir     = cfg['dir']
    @token   = cfg['token']
    @server  = cfg['server']
  end
end

if @port and @dir and @token
  puts "Server Token: #{@token}"
  case @server
    when 'thin'
      Rack::Handler::Thin.run OpenS3.app(@dir, @token), 
                              :Port => @port.to_i,
                              :Host => @address
    when 'mongrel'
      Rack::Handler::Mongrel.run OpenS3.app(@dir, @token), 
                              :Port => @port.to_i,
                              :Host => @address
    when 'unicorn'
      Rack::Handler::Unicorn.run OpenS3.app(@dir, @token),
                                 :listeners => ["#{@address}:#{@port.to_i}"]
    else
      Rack::Handler::Thin.run OpenS3.app(@dir, @token), 
                              :Port => @port.to_i,
                              :Host => @address
  end
else
  puts "No port/directory or config file specified"
end
