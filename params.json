{"name":"Opens3","body":"# OpenS3\r\n\r\nOpenS3 is basically a storage server. What it does is provide a JSON API to upload and download files to a specified path. It includes a bucket feature to organize uploads.\r\n\r\n### Details!\r\nUses Thin as HTTP server and rack for interacting with it. For uploading, listing and downloading files you'll need a token, which is a SHA512 of a string you choose. You'll also need to set an expiry time for a link when downloading.\r\n\r\n### Configuration\r\n\r\nThe configuration is based on a YAML file:\r\n\r\n\t---\r\n\tdir: ./storage\r\n\tport: 8000\r\n\ttoken: TestKey\r\n\r\nAs you can see, `dir` sets the data directory, `port` sets the port where the server should listen and `token` sets the string which, after being SHA512'ed, will be the token.\r\n\r\nYou can also configure this via command line\r\n\t\r\n\topens3 -p 8000 -d ./storage -t SomeToken\r\n\t\r\nBut using a config file is highly recommended:\r\n\r\n\topens3 -c my_config_file.yml\r\n\r\nThe SHA512 token will be shown on the console on launch.\r\n\r\n### API\r\n\r\nThe API is simple:\r\n\r\n##### Basic Upload form and Info\r\n`GET /` for the upload form\r\n\r\n`GET /info` for the info form, which only contains the hostname\r\n\r\n#### Upload\r\n`POST /upload`: You'll need to set the file to the `file` param, the previously mentioned token on the `token` param and the `bucket` param for the bucket (it'll be auto created if it doesn't exists).\r\n\r\n#### Download and listing\r\n\r\n`GET /list`: You'll need to specify the `token` param with the token and the `bucket` param with the bucket you'd wish to list\r\n\r\n`GET /file`: You'll need to specify a `name` param with the wanted filename, a `bucket` param with the bucket of the file, a `token` param with the access token, and a `expire` param with the epoch time (`Time.now.to_i` in Ruby) of link expiration.\r\n\r\n#### Errors\r\n- 100: The path doesn't exists\r\n- 101: The file was not found\r\n- 102: The file already exists (not used since the upload replaces the current file)\r\n- 103: Bucket not found\r\n- 104: Bucket not specified\r\n- 105: The link has expired\r\n- 106: Wrong token\r\n- 107: No file specified on the upload method\r\n\r\n#### Responses\r\nAll the responses will be on JSON format.\r\n`GET /info` will return something like `{\"hostname\":\"localhost:8000\"}` \r\n\r\n`GET /list` will return an array with all the bucket files like `[\"avatar.png\",\"twitter_newbird_blue.pdf\"]`\r\n\r\n`GET /file` will automatically force the file download if all the params are correct\r\n\r\n`POST /upload` will return this if the upload was correct `{\"saved\":true,\"url\":\"/file?name=twitter_newbird_blue.pdf&bucket=ddd\"}`\r\n\r\nAny error will be in this format: `{\"error\":true,\"type\":error_code}` where `error_code` will always be an Integer\r\n\r\n### Disclaimer\r\n\r\nThis is in beta stage, it might contain bugs.\r\n\r\n### License\r\n\r\nOpenS3 - OpenS3 is basically a storage server. What it does is provide a JSON API to upload and download files to a specified path. It includes a bucket feature to organize uploads\r\n\r\nCopyright (C) 2012 Pablo Merino\r\n\r\nThis program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.\r\n\r\nThis program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\r\n\r\nYou should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.","tagline":"OpenS3 is basically a storage server","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}